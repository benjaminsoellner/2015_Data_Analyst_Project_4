---
title: "Data Analyst Project 4 - Explorative Data Analysis with R Exploring White Wine Quality"
author: "Benjamin Soellner"
date: "21. Oktober 2015"
output: html_document
---

# First Observations

```{r preparations, error=F}
library(ggplot2)
library(gridExtra)
library(grid)
library(tidyr)
library(dplyr)
library(scales)
library(GGally)

setwd("h:/Dokumente/GitHub/2015_Data_Analyst_Project_4/")
wine <- read.csv("project/wineQualityWhites.csv")
str(wine)

# Standard histogram handling
ggplot_hist <- function(data, x, binwidth, xlab="", title="", xscale=NA, ylab="", fill=NA, median=T, facet=NA, ncol=1, nrow=1, coordflip=F) {
  e <- environment()
  if (!is.na(fill))
    p <- ggplot(data=data, aes(x=data[,x], fill=data[,fill]), environment=e)
  else
    p <- ggplot(data=data, aes(x=data[,x]), environment=e)
  p <- p + 
      geom_histogram(binwidth=binwidth, alpha=0.5, position='identity') + 
      labs(x=xlab, y=ylab) + ggtitle(title)
  if (median == T)
    p <- p + geom_vline(x=mean(data[,x]))
  if (length(xscale) == 3) 
    p <- p + scale_x_continuous(limits = xscale[1:2], breaks = seq(xscale[1], xscale[2], xscale[3]))
  if (coordflip == T)
    p <- p + coord_flip()
  if (!is.na(facet))
    p <- p + facet_wrap(facet, ncol=ncol, nrow=nrow)
  return(p)
}

# Function to plot with a normal curve overlay & relative freq
ggplot_normdist <- function(data, x, binwidth, xlab, title, xscale=NA, ylab) {
  e <- environment()
  p1 <- ggplot(data=data, aes(x=data[,x]), environment=e) +   
    geom_histogram(aes(y = ..density..), binwidth=binwidth, alpha = 0.2) + 
    stat_function(geom="line", fun=dnorm, arg=list(mean=mean(data[,x]),
                                                   sd=sd(data[,x]))) + 
    geom_vline(x=mean(data[,x])) + 
    theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + 
    labs(y="Relative Frequency", x=xlab) + 
    theme(plot.margin = unit(c(15,5,-20,6), unit="points"),
          axis.title.y = element_text(vjust =0.25)) +
    ggtitle(title)
  if (length(xscale) == 3) 
    p1 <- p1 + scale_x_continuous(limits = xscale[1:2], breaks = seq(xscale[1], xscale[2], xscale[3]))
  p2 <- ggplot_hist(data, x, binwidth, xlab, "", xscale, ylab) + 
    theme(plot.margin = unit(c(0,5,1,1), unit="points"))
  if (length(xscale) == 3) 
    p2 <- p2 + scale_x_continuous(limits = xscale[1:2], breaks = seq(xscale[1], xscale[2], xscale[3]))
  grid.arrange(p1, p2, heights=c(0.2,0.4))
}

ggplot_corr <- function(data, x, y, xlab, ylab, xscale=NA, yscale=NA, title) {
  e <- environment()
  p <- ggplot(data=data, aes(x=data[,x], y=data[,y]), environment=e) + 
          geom_jitter(alpha=0.1) + 
          stat_smooth(geom = "smooth", method = "lm") +
          labs(x=xlab, y=ylab)  + 
          ggtitle(title)
  if (length(xscale) == 3)
    p <- p + scale_x_continuous(limits = xscale[1:2], breaks = seq(xscale[1], xscale[2], xscale[3]))
  if (length(yscale) == 3)
    p <- p + scale_y_continuous(limits = yscale[1:2], breaks = seq(yscale[1], yscale[2], yscale[3]))
  return(p)
}


ggplot_boxplot <- function(data, x, y, xlab="", title="", yscale=NA, ylab="", facet=NA, ncol=1, nrow=1, smooth=T, fill=NA, fillname="") {
  e <- environment()
  if (!is.na(fill))
    p <- ggplot(data=data, aes(x=data[,x], y=data[,y], fill=data[,fill]), environment=e) + 
      scale_fill_discrete(name=fillname)
  else
    p <- ggplot(data=data, aes(x=data[,x], y=data[,y]), environment=e)
  p <- p + geom_boxplot(position='dodge') + labs(x=xlab, y=ylab) + ggtitle(title)
  if (smooth == T)
    p <- p + geom_smooth(method="lm", aes(group=1))
  if (length(yscale) == 3) 
    p <- p + scale_y_continuous(limits = yscale[1:2], breaks = seq(yscale[1], yscale[2], yscale[3]))
  if (!is.na(facet))
    p <- p + facet_wrap(facet, ncol=ncol, nrow=nrow)
  return(p)
}

```

## Fixed Acidity (Tartaric Acid)

  *Most acids involved with wine are fixed or nonvolatile (do not evaporate readily).*

```{r fixed acitity, error=F}
ggplot_normdist(
    data=wine, 
    title="Distribution of Fixed Acidity (Tartaric Acid)",
    binwidth=0.1,
    x="fixed.acidity",
    xlab="Fixed acidity (tartaric acid) in g/dm³",
    xscale=c(3.5, 11, 0.5),
    ylab="Number of wines with this fixed acidity"
  )
```

## Volatile Acidity (Acetic Acid)

  *The amount of acetic acid in wine, which at too high of levels can lead to an unpleasant, vinegar taste.*

```{r volatile acidity}
summary(wine$volatile.acidity)

ggplot_hist(
     data=wine, 
     title="Distribution of Fixed Acidity (Tartaric Acid)",
     binwidth=0.02,
     x="volatile.acidity",
     xlab="Volatile acidity (acetic acid) in g/dm³",
     xscale=c(0, 0.9, 0.05),
     ylab="Number of wines with this volatile acidity"
  )
```

## Citric Acid

  *Found in small quantities, citric acid can add 'freshness' and flavor to wines.*
  
```{r citric acidity}
summary(wine$citric.acid)
ggplot_hist(
     data=wine, 
     title="Distribution of Citric Acidity",
     binwidth=0.02,
     x="citric.acid",
     xlab="Cidric acid in g/dm³",
     xscale=c(0, 1.4, 0.1),
     ylab="Number of wines with this citric acidity"
  )
```

## Relationship between Acidity Values
```{r volatile acidity + cidric acid + fixed acidity}
wineacids <- wine %>%
  dplyr::select(citric.acid, volatile.acidity, fixed.acidity) %>%
  tidyr::gather("acidtype","acidvalue", 1:3)

ggplot_hist(
     data=wineacids, 
     binwidth=0.1,
     x="acidvalue",
     fill="acidtype",
     xlab="Acidity in g/dm³",
     xscale=c(0, 11, 0.5),
     title="Distribution of All Acidities",
     ylab="Number of wines with this acidity",
     median=F
  ) + 
  scale_fill_discrete("Type of Acid")
```

```{r fixed acidity vs. volatile acidity and cidric acid, error=F}
s <- subset(wine, !is.na(volatile.acidity) & !is.na(fixed.acidity) & !is.na(citric.acid))
cor(s[, c("fixed.acidity", "volatile.acidity", "citric.acid")],
    s[, c("fixed.acidity", "volatile.acidity", "citric.acid")])

p1 <- ggplot_corr(
    data=s, x="fixed.acidity", y="volatile.acidity", 
    xscale=c(3.5, 11, 0.5), yscale=c(0, 0.9, 0.05),
    xlab="Fixed acidity (tartaric acid) in g/dm³",
    ylab="Volatile acidity (acetic acid) in g/dm³",
    title="Fixed acidity vs. volatile acidity"
  )
p2 <- ggplot_corr(
    data=s, x="fixed.acidity", y="citric.acid", 
    xscale=c(3.5, 11, 0.5), yscale=c(0, 1.4, 0.1),
    xlab="Fixed acidity (tartaric acid) in g/dm³",
    ylab="Citric acidity in g/dm³",
    title="Fixed acidity vs. citric acidity"
  )
grid.arrange(p1, p2, nrow=1)
```

```{r volatile acidity vs. cidric acid, error=F}
ggplot_corr(
    data=s, x="volatile.acidity", y="citric.acid", 
    xscale=c(0, 0.9, 0.05), yscale=c(0, 1.4, 0.1),
    xlab="Volatile acidity (acetic acid) in g/dm³",
    ylab="Citric acidity in g/dm³",
    title="Volatile acidity vs. citric acidity"
  )
```

## pH

```{r pH, error=F}
summary(wine$pH)

ggplot_normdist(
     data=wine, 
     binwidth=0.02,
     x="pH",
     ylab="Number of wines with this pH Value",
     xlab="pH Value",
     xscale=c(2.6, 4.0, 0.2),
     title="pH Value"
  )
```


## Relationship: pH vs. Acidity


```{r acidity vs. pH}
wineph <- wine
wineph$acidity <- wine$fixed.acidity + wine$volatile.acidity + wine$citric.acid

s <- subset(wineph, !is.na(volatile.acidity) & !is.na(fixed.acidity) &
              !is.na(citric.acid) & !is.na(acidity) & !is.na(pH))
cor(s[, c("fixed.acidity", "volatile.acidity", "citric.acid", "acidity")], s$pH)

p1 <- ggplot_corr(
    data=s, x="fixed.acidity", y="pH", 
    xscale=c(3.5, 11, 0.5), yscale=c(2.6, 4.0, 0.2),
    xlab="Fixed acidity (tartaric acid) in g/dm³",
    ylab="pH",
    title="Fixed acidity vs. pH"
  )
p2 <- ggplot_corr(
    data=s, x="volatile.acidity", y="pH", 
    xscale=c(0, 0.9, 0.05), yscale=c(2.6, 4.0, 0.2),
    xlab="Volatile acidity (acetic acid) in g/dm³",
    ylab="pH",
    title="Volatile acidity vs. pH"
  )
p3 <- ggplot_corr(
    data=s, x="citric.acid", y="pH", 
    xscale=c(0, 1.4, 0.1), yscale=c(2.6, 4.0, 0.2),
    xlab="Citric acidity in g/dm³",
    ylab="pH",
    title="Citric acidity vs. pH"
  )
p4 <- ggplot_corr(
    data=s, x="acidity", y="pH", 
    xscale=c(3.5, 12, 0.5), yscale=c(2.6, 4.0, 0.2),
    xlab="'Total' acidity (sum) in g/dm³",
    ylab="pH",
    title="'Total' acidity vs. citric acidity"
  )
grid.arrange(p1, p2, p3, p4, nrow=2)
```

## Chlorides

```{r chlorides, error=F}
summary(wine$chlorides)

ggplot_normdist(
     data=wine, 
     title="Distribution of Chlorides (Salts)",
     binwidth=0.002,
     x="chlorides",
     xlab="Chlorides in g/dm³",
     xscale=c(0, 0.2, 0.01),
     ylab="Number of wines with this amount of chlorides"
  )
```

## Free Sulfur Dioxide
```{r free sulfur dioxide, error=F}
summary(wine$free.sulfur.dioxide)

ggplot_normdist(
     data=wine, 
     title="Free Sulfur Dioxide",
     binwidth=2,
     x="free.sulfur.dioxide",
     xlab="Free Sulfur Dioxide in mg/dm³",
     xscale=c(0, 400, 10),
     ylab="Number of wines with this amount of free SO2"
  )
```

## Total Sulfur Dioxide
```{r total sulfur dioxide, error=F}
summary(wine$total.sulfor.dioxide)

ggplot_normdist(
     data=wine, 
     title="Total Sulfur Dioxide",
     binwidth=2,
     x="total.sulfur.dioxide",
     xlab="Total Sulfur Dioxide in mg/dm³",
     xscale=c(0, 400, 10),
     ylab="Number of wines with this amount of total SO2"
  )
```

## Relationship: Total vs. Free Sulfur Dioxide
```{r total vs. free sulfur dioxide, error=F}
s <- subset(wine, !is.na(free.sulfur.dioxide) & !is.na(total.sulfur.dioxide))
cor.test(s$total.sulfur.dioxide, s$free.sulfur.dioxide)

ggplot_corr(
    data=s, x="total.sulfur.dioxide", y="free.sulfur.dioxide", 
    xscale=c(0, 300, 20), yscale=c(0, 160, 20),
    xlab="Total Sulfur Dioxide in mg/dm³",
    ylab="Free Sulfur Dioxide in mg/dm³",
    title="Total sulfur dioxide vs. free sulfur dioxide"
  )
```

## Sulphates
```{r sulphates}
summary(wine$sulphates)

ggplot_hist(
     data=wine, 
     title="Sulphates",
     binwidth=0.01,
     x="sulphates",
     xlab="Sulphates in the wine (g/dm³)",
     xscale=c(0.2, 1.000, 0.05),
     ylab="Number of wines with that amount of sulphates"
  )
```

## Relationship: Sulphates vs. Total Sulfur Dioxide
```{r sulphates vs. total sulfur dioxide, error=F}
s <- subset(wine, !is.na(sulphates) & !is.na(total.sulfur.dioxide))
cor.test(s$sulphates, s$total.sulfur.dioxide)

ggplot_corr(
    data=s, x="sulphates", y="total.sulfur.dioxide", 
    xscale=c(0.2, 1.000, 0.05), yscale=c(0, 300, 20),
    xlab="Sulphates in the wine (g/dm³)",
    ylab="Total sulfur dioxide (mg/dm³)",
    title="Sulphates vs. total sulfur dioxide"
  )
```

## Residual Sugar

  *the amount of sugar remaining after fermentation stops, it's rare to find wines with less than 1 gram/liter and wines with greater than 45 grams/liter are considered sweet*

```{r residual sugar}
summary(wine$residual.sugar)
subset(wine, residual.sugar > 45)

ggplot_hist(
     data=wine, 
     title="Distribution of Residual Sugar (Non-Sweet Wines)",
     binwidth=0.2,
     x="residual.sugar",
     xlab="Residual sugar (g/dm³)",
     xscale=c(0, 45, 2),
     ylab="Number of wines with this residual sugar content"
  )
```

## Alcohol

```{r alcohol}
summary(wine$alcohol)

ggplot_hist(
     data=wine, 
     title="Alcohol level",
     binwidth=0.1,
     x="alcohol",
     xlab="Alcohol level (% by volume)",
     xscale=c(8, 14, 0.5),
     ylab="Number of wines with that alcohol level"
  )
```

## Relationship: Residual Sugar vs. Alcohol

```{r residual sugar vs. alcohol}
cor.test(wine$residual.sugar, wine$alcohol)

ggplot_corr(
    data=s, x="residual.sugar", y="alcohol", 
    xscale=c(0, 45, 2), yscale=c(8, 14, 0.5),
    xlab="Residual sugar (g/dm³)",
    ylab="Alcohol level (% by volume)",
    title="Residual sugar vs. alcohol level"
  )
```


## Density 

```{r density, error=F}
summary(wine$density)

ggplot_normdist(
     data=wine, 
     title="Density",
     binwidth=0.0005,
     x="density",
     xlab="Density of the wine (g/cm³)",
     xscale=c(0.985, 1.005, 0.005),
     ylab="Number of wines with that density"
  )
```

## Relationship: Density vs. Sugar & Alcohol Level

```{r density vs. residual sugar vs. alcohol, fig.width=15, fig.height=10}
s <- subset(wine, !is.na(residual.sugar) & !is.na(alcohol) & !is.na(density))
cor(s[, c("residual.sugar", "alcohol")], s$density)

p1 <- ggplot_corr(
    data=s, x="alcohol", y="density", 
    xscale=c(8, 14, 0.5), yscale=c(0.985, 1.005, 0.005),
    xlab="Alcohol level (% by volume)",
    ylab="Density (g/cm³)",
    title="Alcohol vs. Density"
  )
p2 <- ggplot_corr(
    data=s, x="residual.sugar", y="density", 
    xscale=c(0, 45, 2), yscale=c(0.985, 1.005, 0.005),
    xlab="Residual sugar (g/dm³)",
    ylab="Density (g/cm³)",
    title="Residual Sugar vs. Density"
  )

grid.arrange(p1, p2, nrow=1)
```

## Output Variable: Quality based on Sensory Data

```{r quality}
summary(wine$alcohol)
table(wine$quality)
ggplot_hist(
     data=wine, 
     title="Quality",
     binwidth=1,
     x="quality",
     xlab="Quality (0-10)",
     xscale=c(0, 10, 1),
     ylab="Number of Wines having that Quality"
  )
```

## Categorical Variable: Wine Flavor

```{r flavor}
wine$acidity <- wine$fixed.acidity + wine$volatile.acidity + wine$citric.acid
wine$flavor <- 
      ifelse(wine$residual.sugar <= 4 & wine$acidity >= wine$residual.sugar-2, "classical-dry",
      ifelse(wine$residual.sugar <= 9 & wine$acidity >= wine$residual.sugar-2, "dry",
      ifelse(wine$residual.sugar <= 18 & wine$acidity >= wine$residual.sugar-10, "half-dry",
      ifelse(wine$residual.sugar <= 45, "semi-sweet",
      ifelse(wine$residual.sugar > 45, "sweet",
      "unclassified"
      )))))

ggplot(data=wine, aes(x=acidity, y=residual.sugar, colour=flavor)) +  
  geom_jitter(alpha=0.5) + 
  labs(x="'Total' acidity (g/cm³)", y="Residual sugar (g/cm³)") + 
  ggtitle("Classification of wines according to EU law") +
  scale_x_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5)) + 
  scale_y_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) + 
  scale_colour_discrete(name="Flavour")

table(wine$flavor)
```

## Scatterplot Matrix

```{r scatterplot matrix, fig.width=15, fig.height=20, error=F}
set.seed(1836)
winematrix <- wine[, c(2:15)]
ggpairs(data=winematrix[sample.int(nrow(winematrix), 1000), ],
        title="Relationship between any two variables",
        alpha=0.05)
```


### Confirmation of previous findings (little surprises)
```{r r for acidity vs. all types of acidity}
cor(wine$acidity, wine[, c("fixed.acidity", "volatile.acidity", "citric.acid")])
```
**Negative corellation**; acidity is defined as the weight-sum of all acids; with fixed acids and citrics acids usually dominating over volatile acids, the corellation here is stronger.

```{r r for pH vs. all types of acidity}
cor(wine$pH, wine[, c("acidity", "fixed.acidity", "volatile.acidity", "citric.acid")])
```
**Negative corellation** between pH and all types of acidity, but not as high as the parameter "acidity", probably because pH also takes into account the influence of basic components.

```{r r for total.sulfur.dioxide vs. free.sulfur.dioxide}
cor(wine$total.sulfur.dioxide, wine$free.sulfur.dioxide)
```
**Strong positive corellation** because free sulfur dioxide makes out the majority of all sulfur dioxides.

```{r r for sulphates vs. total.sulfur.dioxide}
cor(wine$sulphates, wine$total.sulfur.dioxide)
```
**Weak positive corellation**, as the definition of sulphates suggests, sulphates lead to the creation of SO2 levels

```{r r for alcohol vs. residual.sugar}
cor(wine$alcohol, wine$residual.sugar)
```
**Strong negative corellation** because of chemical process of alcohol gestation (sugar gets converted to alcohol).

```{r r for residual.sugar vs. alcohol}
cor(wine$residual.sugar, wine$density)
```
**Strong positive corellation**, additional sugar in the fluid leads to a higher density than no sugar.


### New Findings Concerning Chemical Properties

```{r r for residual.sugar vs. free.sulfur.dioxide}
cor(wine$residual.sugar, wine$free.sulfur.dioxide)
```
**Weak positive corellation** -- remains unexplained.

```{r r for chlorides vs. alcohol}
cor(wine$chlorides, wine$alcohol)
```
**Weak negative corellation** -- remains unexplained.

```{r r for free.sulfur.dioxide vs. total.sulfur.dioxide}
cor(wine$free.sulfur.dioxide, wine$total.sulfur.dioxide)
```
**Strong positive corellation** -- obvious (free sulfur dioxide is the major part of total sulfur dioxide)

```{r r for chlorides and total.sulfur.dioxide vs. density}
cor(wine$density, wine[, c("chlorides", "total.sulfur.dioxide")])
```
**Positive corellation**, higher for "total.sulfur.dioxide", SO2 increases the density of the wine.

```{r r for acidity vs. density}
cor(wine$acidity, wine$density)
```
**Weak positive corellation**, acidity further increases the density of wine.

```{r r for alcohol vs. density}
cor(wine$alcohol, wine$density)
```
**Strong negative corellation**, alcohol content lowers sugar content and leads to releases of gases, therefore creating a lighter brew and lowering density.

### New Findings Concerning Quality

```{r r for quality}
cor(wine$quality, wine[, c("volatile.acidity", "fixed.acidity", "citric.acid", "chlorides", "alcohol", "total.sulfur.dioxide", "residual.sugar")])
```

```{r r for quality by wine}
by(wine, wine$flavor, function(w) { cor(w$quality, w[, c("volatile.acidity", "fixed.acidity", "citric.acid", "chlorides", "total.sulfur.dioxide", "alcohol", "residual.sugar")]) } )
```

## Scatterplot Matrix (facetted by Quality)

```{r scatterplot matrix by quality, error=F, fig.width=15, fig.height=20}
set.seed(1836)
winematrix <- wine[, c(2:15)]
winematrix$quality <- as.factor(winematrix$quality)
ggpairs(data=winematrix[sample.int(nrow(winematrix), 1000), ],
        title="Relationship focussing on wine quality",
        alpha=0.05, colour="quality")
```

# Final Plots and Summaries

```{r r for quality by wine - dataframe, error=F, fig.width=15, fig.height=10}
winequality <- wine
winequality$quality <- as.numeric(as.character(winequality$quality))
winequality <- winequality %>%
     dplyr::group_by(flavor) %>%
     dplyr::summarise(cor(quality,alcohol), cor(quality,residual.sugar),
                      cor(quality,chlorides), cor(quality,total.sulfur.dioxide),
                      cor(quality,volatile.acidity), cor(quality,fixed.acidity),
                      cor(quality,citric.acid)) %>%
     tidyr::gather("indicator", "corellation", 2:8)
```

```{r r for quality by wine - graph, error=F, fig.width=15, fig.height=10}
b <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
r <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
ggplot(winequality, aes(x=indicator, y=flavor)) +
  geom_tile(aes(fill=corellation)) +
  scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
                       na.value="grey", limits=c(-1,1), breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
                       values=c(rescale(1:201,to=c(0.0,0.45)),rescale(1:201,to=c(0.55,1.0))) ) +
  scale_x_discrete(labels=c("alcohol content", "residual sugar", "chlorides", "total sulfur dioxide",
                            "volatile acidity", "fixed acidity", "citric acidity")) +
  geom_text(aes(label=round(corellation,3))) + 
  xlab("Indicator") + ylab("Flavor") + ggtitle("Influence of certain chemicals on wine quality")
```

```{r chemical composition of different wine flavors, error=F, fig.width=15, fig.height=10}
winefilter <- wine %>% dplyr::filter(flavor!="sweet")
p1 <- ggplot_hist(
     data=winefilter, x="alcohol", binwidth=0.1, xscale=c(8, 14, 0.5*5),
     xlab="Alcohol level (% by volume)", ylab="Number of wines with that alcohol level",
     facet=~flavor, nrow=4, ncol=1
  )
p2 <- ggplot_hist(
     data=winefilter, x="chlorides", binwidth=0.002, xscale=c(0, 0.2, 0.01*5),
     xlab="Chlorides in g/dm³", ylab="Number of wines with this amount of chlorides",
     facet=~flavor, nrow=4, ncol=1
  )
p3 <- ggplot_hist(
     data=winefilter, x="total.sulfur.dioxide", binwidth=2, xscale=c(0, 400, 10*5),
     xlab="Total Sulfur Dioxide in mg/dm³", ylab="Number of wines with this amount of total SO2",
     facet=~flavor, nrow=4, ncol=1
  )
p4 <- ggplot_hist(
     data=winefilter, x="volatile.acidity", binwidth=0.02, xscale=c(0, 0.9, 0.05*5),
     xlab="Volatile acidity (acetic acid) in g/dm³", ylab="Number of wines with this volatile acidity",
     facet=~flavor, nrow=4, ncol=1
  )
p5 <- ggplot_hist(
    data=winefilter, x="fixed.acidity", binwidth=0.1, xscale=c(3.5, 11, 0.5*5),
    xlab="Fixed acidity (tartaric acid) in g/dm³", ylab="Number of wines with this fixed acidity",
    facet=~flavor, nrow=4, ncol=1
  )
p6 <- ggplot_hist(
     data=winefilter, x="citric.acid", binwidth=0.02, xscale=c(0, 1.4, 0.1*5), 
     xlab="Cidric acid in g/dm³", ylab="Number of wines with this citric acidity",
     facet=~flavor, nrow=4, ncol=1
  )
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=1)
```

```{r chemical composition of different wine flavors and influence on quality}
p1 <- ggplot_boxplot(
     data=winefilter, x="quality", y="alcohol", yscale=c(8, 14, 0.5*5),
     ylab="Alcohol level (% by volume)", xlab="Quality Score",
     facet=~flavor, nrow=4, ncol=1
  )
p2 <- ggplot_boxplot(
     data=winefilter, x="quality", y="chlorides", yscale=c(0, 0.2, 0.01*5),
     ylab="Chlorides in g/dm³", xlab="Quality Score ",
     facet=~flavor, nrow=4, ncol=1
  )
p3 <- ggplot_boxplot(
     data=winefilter, x="quality", y="total.sulfur.dioxide", yscale=c(0, 400, 10*5),
     ylab="Total Sulfur Dioxide in mg/dm³", xlab="Quality Score ",
     facet=~flavor, nrow=4, ncol=1
  )
p4 <- ggplot_boxplot(
     data=winefilter, x="quality", y="volatile.acidity", yscale=c(0, 0.9, 0.05*5),
     ylab="Volatile acidity (acetic acid) in g/dm³", xlab="Quality Score ",
     facet=~flavor, nrow=4, ncol=1
  )
p5 <- ggplot_boxplot(
    data=winefilter, x="quality", y="fixed.acidity", yscale=c(3.5, 11, 0.5*5),
    ylab="Fixed acidity (tartaric acid) in g/dm³", xlab="Quality Score ",
    facet=~flavor, nrow=4, ncol=1
  )
p6 <- ggplot_boxplot(
     data=winefilter, x="quality", y="citric.acid", yscale=c(0, 1.4, 0.1*5), 
     ylab="Cidric acid in g/dm³", xlab="Quality Score ",
     facet=~flavor, nrow=4, ncol=1
  )
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=1)
```


```{r chemical composition of different wine flavors and influence on quality 2, error=F, fig.width=15, fig.height=10}
p1 <- ggplot_boxplot(
     data=winefilter, x="quality", y="alcohol", yscale=c(8, 14, 0.5*5), 
     ylab="Alcohol level (% by volume)", xlab="Quality Score", smooth=F,
     fill="flavor", fillname="Wine flavor", title="Influence of Alcohol Level on Quality by Wine Flavor"
  )
p2 <- ggplot_boxplot(
     data=winefilter, x="quality", y="chlorides", yscale=c(0, 0.2, 0.01*5),
     ylab="Chlorides in g/dm³", xlab="Quality Score ", smooth=F,
     fill="flavor", fillname="Wine flavor", title="Influence of Chlorides on Quality by Wine Flavor"
  )
p3 <- ggplot_boxplot(
     data=winefilter, x="quality", y="total.sulfur.dioxide", yscale=c(0, 400, 10*5), 
     ylab="Total Sulfur Dioxide in mg/dm³", xlab="Quality Score ", smooth=F,
     fill="flavor", fillname="Wine flavor", title="Influence of Total Sulfur Dioxide on Quality by Wine Flavor"
  )
p4 <- ggplot_boxplot(
     data=winefilter, x="quality", y="volatile.acidity", yscale=c(0, 0.9, 0.05*5), 
     ylab="Volatile acidity (acetic acid) in g/dm³", xlab="Quality Score ", smooth=F,
     fill="flavor", fillname="Wine flavor", title="Influence of Volatile Acidity on Quality by Wine Flavor"
  )
p5 <- ggplot_boxplot(
    data=winefilter, x="quality", y="fixed.acidity", yscale=c(3.5, 11, 0.5*5), 
    ylab="Fixed acidity (tartaric acid) in g/dm³", xlab="Quality Score ", smooth=F,
    fill="flavor", fillname="Wine flavor", title="Influence of Fixed Acidity on Quality by Wine Flavor"
  )
p6 <- ggplot_boxplot(
     data=winefilter, x="quality", y="citric.acid", yscale=c(0, 1.4, 0.1*5), 
     ylab="Citric acid in g/dm³", xlab="Quality Score ", smooth=F,
     fill="flavor", fillname="Wine flavor", title="Influence of Citric Acidity on Quality by Wine Flavor"
  )
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3,nrow=2)
```


**TODO:** at least 3 plots which do at least 2 of the following:

* draw comparisons
* identify trends
* engage a wide audience
* explain a complicated finding
* clarify a gap between perception and reality
* enable the reader to digest large amounts of information

# Reflection

**TODO:**

* Where did I run into difficulties?
* Where did I find successes?
* How could the analysis be enriched in the future (additional data and analyses)?
* Potentially: Decisions taken?
