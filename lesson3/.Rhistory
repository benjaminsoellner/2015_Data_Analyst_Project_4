udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
udacious
numbers <- c(1:10)
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Benjamin SÃ¶llner")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
mtcars$mpg
mtcars$mpg
mean(mtcars$mpg)
```{r}
summary(mtcars)
```
summary(mtcars)
summary(mtcars)
mtexpensive = mtcars[mtcars$mpg>=23,]
dim(mtexpensive)
dim(mtexpensive)[1]
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
subset(mtcars, wt < 2)
mtcars$year <- 1974
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
efficient = mtcars[mtcars$mpg>=23,]
dim(efficient)[1]
View(mtexpensive)
View(mtexpensive)
rm(efficient)
rm(mtexpensive)
library(knitr)
install.packages('knitr', dependencies = T)
install.packages("knitr", dependencies = T)
library(knitr)
library(knitr)
library(knitr)
mtcars[mtcars$mpg >= 30 | mtcars$hp < 60,]
mtcars[mtcars$mpg >= 30 | mtcars$hp < 60,]
install.packages('ggplot2')
getwd()
setwd("~/GitHub/2015_Data_Analyst_Project_4/lesson3")
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
library(ggplot2)
install.packages('ggplot2')
install.packages("ggplot2")
qplot(x=dob_day, data=pf)
qplot(x=dob_day, data=pf) +
scale_x_discrete(breaks=1:31)
qplot(x=dob_day, data=pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol=3)
names(pf)
qplot(x=friend_count, data=pf)
qplot(x=friend_count, data=pf)
qplot(x=friend_count, data=pf, xlim=c(0,1000))
qplot(x=friend_count, data=pf) +
scale_x_continuous(limits=c(0,1000))
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
names(pf)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
faced_wrap(~gender)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_grid(gender~)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_grid(gender)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_grid(gender)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_grid(gender~gender)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(gender,ncol=1)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender,ncol=2)
qplot(x=friend_count, data=pf, binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender,ncol=1)
qplot(x=friend_count, data=subset(pf, !is.na(friend_count)), binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender,ncol=1)
qplot(x=friend_count, data=na.omit(friend_count), binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender,ncol=1)
qplot(x=friend_count, data=na.omit(friend_count), binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender,ncol=1)
qplot(x=friend_count, data=na.omit(pf), binwidth=25)+
scale_x_continuous(limits=c(0,1000),breaks=seq(0,1000,50))+
facet_wrap(~gender,ncol=1)
table(pf$gender)
table(pf$gender)
by(pf$friend_count)
by(pf$friend_count)
by(pf$friend_count, pf$gender, summary)
qplot(x=tenure, data=pf, color=I('black'), fill=I('#099dd9'))
qplot(x=tenure, data=pf, binwidth=356, color=I('black'), fill=I('#099dd9'))
qplot(x=tenure/365, data=pf, binwidth=1, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=c(0))
qplot(x=tenure/365, data=pf, binwidth=.25, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=c(1,7,1), limits=c(0,7))
qplot(x=tenure/365, data=pf, binwidth=.25, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(1,7,1), limits=c(0,7))
qplot(x=tenure/365, data=pf, binwidth=.25, color=I('black'), fill=I('#099dd9'),
xlab="Number of years in Facebook",
ylab="Number of users in sample") +
scale_x_continuous(breaks=seq(1,7,1), limits=c(0,7))
names(pf)
qplot(x=age, data=pf, binwidth=.25, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
qplot(x=age, data=pf, binwidth=1, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
qplot(x=age, data=pf, binwidth=3, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
scale_x_continuous(breaks=seq(1,125,5), limits=c(0,125))
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
scale_x_continuous(breaks=seq(1,125,1), limits=c(0,125))
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") #+
scale_x_continuous(breaks=seq(1,125,5), limits=c(0,125))
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") +
scale_x_continuous(breaks=seq(1,125,5), limits=c(0,125))
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") +
scale_x_continuous(breaks=seq(0,125,5), limits=c(0,125))
qplot(x=age, data=pf, binwidth=2.5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") +
scale_x_continuous(breaks=seq(0,125,5), limits=c(0,125))
qplot(x=age, data=pf, binwidth=5, color=I('black'), fill=I('#099dd9'),
xlab="Age of Facebook users in years",
ylab="Number of users in sample") +
scale_x_continuous(breaks=seq(0,125,5), limits=c(0,125))
names(pf)
qplot(x=friend_count, data=pf, binwidth=1, color=I('black'), fill=I('#099dd9'))
qplot(x=friend_count, data=pf, binwidth=10, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(1,2000,100), limits=c(0,2000))
qplot(x=friend_count, data=pf, binwidth=10, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
qplot(x=friend_count, data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
qplot(x=log10(friend_count), data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
install.packages('gridExtra')
library(gridExtra)
p1 <- qplot(x=log10(friend_count+1), data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
p1 <- qplot(x=friend_count, data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
p1 <- qplot(x=friend_count, data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
p1 <- qplot(x=log10(friend_count+1), data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
p1 <- qplot(x=sqrt(friend_count), data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
grid.arrange(p1,p2,p3, ncol=1)
grid.arrange(p1,p2,p3, ncol=1)
grid.arrange(p1,p2,p3, ncol=1)
p1 <- qplot(x=friend_count, data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
p2 <- qplot(x=log10(friend_count+1), data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
p3 <- qplot(x=sqrt(friend_count), data=pf, binwidth=20, color=I('black'), fill=I('#099dd9')) +
scale_x_continuous(breaks=seq(0,2000,100), limits=c(0,2000))
grid.arrange(p1,p2,p3, ncol=1)
p1 <- qplot(x=friend_count, data=pf)
p1 <- qplot(x=friend_count, data=pf)
p2 <- qplot(x=log10(friend_count+1), data=pf)
p3 <- qplot(x=sqrt(friend_count), data=pf)
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(x=friend_count), data=pf) + geom_histogram()
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1,p2,p3, ncol=1)
qplot(x=friend_count, data=subset(pf, !is.na(gender)), binwidth=10, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x=friend_count, y = ..count../sum(..count..),
data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
binwidth=10, geom='freqpoly', color=gender) +
scale_x_continuous(lim=c(0,1000), breaks=seq(0,1000,50))
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender)
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10()
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10()
scale_x_continuous(lim=c(0,10000), breaks=seq(0,1000,50))
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10() +
scale_x_continuous(lim=c(0,10000), breaks=seq(0,10000,50))
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10() +
scale_x_continuous(lim=c(0,10000))
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10(lim=c(0,10000))
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10(lim=c(0,10000))
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
xlab='Friend Count',
ylab='Proportion of Users with that friend count',
geom='freqpoly', color=gender) +
scale_x_log10()
qplot(x=www_likes, data=subset(pf, !is.na(gender)),
y = ..count../sum(..count..),
xlab='Number of likes on the web',
ylab='Proportion of Users with this number of likes on the web',
geom='freqpoly', color=gender) +
scale_x_log10()
sum(subset(pf, gender=="male"))
sum(subset(pf, gender="male"))
sum(subset(pf, gender=="male"))
by(pf$www_likes, pf$gender, sum)
by(pf$www_likes, pf$gender, sum)
qplot(y=friend_count, x=gender,
data=subset(pf, !is.na(gender)),
geom='boxplot')
qplot(y=friend_count, x=gender,
data=subset(pf, !is.na(gender)),
geom='boxplot') +
scale_y_continuous(limit=c(0,1000))
qplot(y=friend_count, x=gender,
data=subset(pf, !is.na(gender)),
geom='boxplot',
ylim=c(0,1000))
qplot(y=friend_count, x=gender,
data=subset(pf, !is.na(gender)),
geom='boxplot') +
coord_cartesian(ylim=c(0,1000))
qplot(x=gender, y=friend_count, data=subset(pf, !is.na(gender)), geom='boxplot') +
coord_cartesian(ylim=c(0,250))
summary(pf$friend_count)
by(pf$friend_count, pf$gender, average)
by(pf$friend_count, pf$gender, mean
by(pf$friend_count, pf$gender, mean)
by(pf$friend_count, pf$gender, mean)
summary(pf$mobile_likes>0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes>0, 1, 0)
pf_mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes>0, 1, 0)
pf_mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in==1)/length(pf$mobile_check_in)
library(ggplot2)
data(diamonds)
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
data(diamonds)
summary(diamonds)
length(diamonds)
nrow(diamonds)
nrow(diamonds)
dim(diamonds)
?diamonds # help
qplot(diamonds$price)
summary(diamonds$price)
nrows(subset(diamonds, price<500))
nrow(subset(diamonds, price<500))
nrow(subset(diamonds, price<250))
nrow(subset(diamonds, price>=15000))
qplot(diamonds$price, binwidth = 50) +
scale_x_continuous(limits = c(2000, 3000),
breaks = seq(2000, 3000, 50))
qplot(diamonds$price, binwidth = 100) +
scale_x_continuous(limits = c(2000, 3000),
breaks = seq(2000, 3000, 50))
qplot(diamonds$price, binwidth = 20) +
scale_x_continuous(limits = c(2000, 3000),
breaks = seq(2000, 3000, 50))
qplot(diamonds$price, binwidth = 10) +
scale_x_continuous(limits = c(2000, 3000),
breaks = seq(2000, 3000, 50))
qplot(diamonds$price, binwidth = 50) +
scale_x_continuous(limits = c(1500, 3500),
breaks = seq(2000, 3000, 50))
qplot(diamonds$price, binwidth = 50) +
scale_x_continuous(limits = c(1500, 3500),
breaks = seq(2000, 3500, 50))
qplot(diamonds$price, binwidth = 50) +
scale_x_continuous(limits = c(1500, 3500),
breaks = seq(1500, 3500, 50))
qplot(diamonds$price, binwidth = 100) +
scale_x_continuous(limits = c(1500, 3500),
breaks = seq(1500, 3500, 100))
```{r}
qplot(diamonds$price, binwidth = 1) +
scale_x_continuous(limits = c(1500, 3500),
breaks = seq(1500, 3500, 100))
```
qplot(diamonds$price, binwidth = 100) +
scale_x_continuous(limits = c(1500, 3500),
breaks = seq(1500, 3500, 100))
qplot(diamonds$price, binwidth = 100) +
facet_wrap(~cut,ncol=3)
qplot(x=price, data=diamonds, binwidth = 100) +
facet_wrap(~cut,ncol=3)
qplot(x=price, data=diamonds, binwidth = 200) +
facet_wrap(~cut,ncol=3)
qplot(x=price, data=diamonds, binwidth = 500) +
facet_wrap(~cut,ncol=3)
by(pf$price, pf$cut, summary)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, summary, digits = max(getOption('digits')))
qplot(x=price, data=diamonds, binwidth = 500) +
facet_wrap(~cut,ncol=3,scales=free_y)
qplot(x=price, data=diamonds, binwidth = 500) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat, data=diamonds) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat, data=diamonds, binwidth=100) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat, data=diamonds, binwidth=200) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat, data=diamonds, binwidth=200) +
scale_x_log10() +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat, data=diamonds, binwidth=200) +
scale_x_log10() +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat+1, data=diamonds, binwidth=200) +
scale_x_log10() +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat+1, data=diamonds, binwidth=200) +
scale_x_log10() +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=(price/carat+1), data=diamonds, binwidth=200) +
scale_x_log10() +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=(price/carat+1), data=diamonds, binwidth=200) +
scale_x_log10() +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=log(price/carat+1), data=diamonds, binwidth=200) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=log(price/carat+1), data=diamonds) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=price/carat, data=diamonds, binwidth=200) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(x=log10(price/carat), data=diamonds) +
facet_wrap(~cut,ncol=3,scales="free_y")
qplot(y=price, x=cut, data=diamonds), geom='boxplot')
qplot(y=price, x=cut, data=diamonds, geom='boxplot')
qplot(y=price, x=clarity, data=diamonds, geom='boxplot')
qplot(y=price, x=color, data=diamonds, geom='boxplot')
by(diamonds$price, diamonds$clarity, summary)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$color, summary)
summary(subset(diamonds, color="D"))
summary(subset(diamonds$price, color="D"))
summary(subset(diamonds, color="D")$price)
summary(subset(diamonds, color="J")$price)
summary(subset(diamonds, color="J")$price)[0]
summary(subset(diamonds, color="J")$price)$Mean
summary(subset(diamonds, color="J")$price)
dim(summary(subset(diamonds, color="J")$price))
s=summary(subset(diamonds, color="J")$price)
summary(subset(diamonds, color="D")$price)
summary(subset(diamonds, color="J")$price)
summary(subset(diamonds, color="D")$price, digits = max(getOption('digits'))
summary(subset(diamonds, color="J")$price, digits = max(getOption('digits'))
summary(subset(diamonds, color="D")$price)
summary(subset(diamonds, color="J")$price)
IQR(subset(diamonds, color="D")$price)
IQR(subset(diamonds, color="J")$price)
quartile(subset(diamonds, color="D")$price)
quantile(subset(diamonds, color="D")$price)
quantile(subset(diamonds, color="J")$price)
summary(diamonds$color)
quantile(subset(diamonds, color=D)$price)
quantile(subset(diamonds, color=D)$price)
quantile(subset(diamonds, color=J)$price)
quantile(d$price)
quantile(d$price)
d=subset(diamonds, color=D)
quantile(d$price)
d=subset(diamonds, diamonds$color="D"")
d=subset(diamonds, diamonds$color="D")
d=subset(diamonds, diamonds$color="D")
d=subset(diamonds, diamonds$color="D")
d=subset(diamonds, diamonds$color="D")
IQR(subset(diamonds, color=="D")$price)
IQR(subset(diamonds, color=="D")$price)
IQR(subset(diamonds, color=="J")$price)
quantile(subset(diamonds, color=="D")$price)
quantile(subset(diamonds, color=="J")$price)
IQR(subset(diamonds, color=="D")$price)
IQR(subset(diamonds, color=="J")$price)
qplot(y=price/carat, x=color, data=diamonds, geom='boxplot')
qplot(y=log(price/carat), x=color, data=diamonds, geom='boxplot')
qplot(y=price/carat, x=color, data=diamonds, geom='boxplot')
qplot(diamonds$carat, geom='freqpoly')
qplot(diamonds$carat, binwidth=0.1, geom='freqpoly')
qplot(diamonds$carat, binwidth=0.1, geom='freqpoly') +
scale_x_continuous(limits = c(0, 5),
breaks = seq(0, 5, 0.1))
qplot(diamonds$carat, binwidth=0.1, geom='freqpoly') +
scale_x_continuous(limits = c(0, 5),
breaks = seq(0, 5, 0.2))
install.packages("tidyr")
install.packages("dplyr")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
f = read.csv('Suicide female indicator file UL 20100916.csv', header=T, row.names=1, check.names=F)
m = read.csv('Suicide male indicator file UL 20100916.csv', header=T, row.names=1, check.names=F)
View(m)
View(f)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
