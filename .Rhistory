na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
winematrix <- wine[, c(2:15)]
set.seed(1836)
winematrix <- wine[, c(2:15)]
winematrix <- wine[, c(2:15)]
winematrix <- wine[, c(2:15)]
str(wine)
wine$acidity <- wine$fixed.acidity + wine$volatile.acidity + wine$citric.acid
wine$flavor <-
ifelse(wine$residual.sugar <= 4 & wine$acidity >= wine$residual.sugar-2,
"classical-dry",
ifelse(wine$residual.sugar <= 9 & wine$acidity >= wine$residual.sugar-2,
"dry",
ifelse(wine$residual.sugar <= 18 & wine$acidity >= wine$residual.sugar-10,
"half-dry",
ifelse(wine$residual.sugar <= 45, "semi-sweet",
ifelse(wine$residual.sugar > 45, "sweet",
"unclassified"
)))))
b <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
r <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
ggcorr(data=winematrix[sample.int(nrow(winematrix), 1000), ], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
winematrix <- wine[, c(2:15)]
ggcorr(data=winematrix[sample.int(nrow(winematrix), 1000), ], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=winematrix[sample.int(nrow(winematrix), 1000), c(1:13)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=winematrix[sample.int(nrow(winematrix), 1000), c(1:13)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2)
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2)
?scale_fill_discrete
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_discrete(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy")
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_discrete(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy")
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_discrete(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy")
scale_fill_discrete(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy")
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_discrete(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy"))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_brewer(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy"))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_distiller(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy"))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_distiller(values=c("darkred","red2","mistyrose","white","lightskyblue","royalblue","navy"))
?scale_fill_continuous()
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradient(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
?scale_fill_gradient(name="Corellation", colours=c(r,"white","white",b),
?scale_fill_gradient
?scale_fill_gradient
;
?scale_fill_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradient(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradient(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", max_size=6, label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_color_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
geom="tile", label=TRUE, label_alpha=FALSE,
label_color="black", label_round=2) +
scale_color_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
?nbreaks
?ggcorr
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)]) +
scale_color_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)]) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", nbreaks=0) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", nbreaks=0) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", nbreaks=-1) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
winematrix <- wine
winematrix$quality <- as.numeric(winematrix$quality)
ggcorr(data=wine[sample.int(nrow(winematrix), 1000), c(1:13)], name="r", nbreaks=-1) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=winematrix[sample.int(nrow(winematrix), 1000), c(1:13)], name="r", nbreaks=-1) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
?ggcorr
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
ggcorr(nba[, 2:15], low = "steelblue", mid = "white", high = "darkred")
update.packages(ggplot2)
update.packages("ggplot2")
?ggcorr
update.packages("GGally")
?ggcorr
ggcorr(nba[, 2:15], low = "steelblue", mid = "white", high = "darkred")
ggcorr(nba[, 2:15], nbreaks=NULL, low = "steelblue", mid = "white", high = "darkred")
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], nbreaks=NULL, name="r", nbreaks=-1) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
source("https://raw.githubusercontent.com/briatte/ggcorr/master/ggcorr.R")
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], nbreaks=NULL, name="r", nbreaks=-1) +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r") +
scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
?ggcorr
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE) +
cor_gradient
# palette with 200 steps over shades of blue
blue_gradient <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
# palette with 200 steps over shades of red
red_gradient <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
# gradient to show corellation
cor_gradient <- scale_fill_gradientn(name="Corellation", colours=c(r,"white","white",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=0) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1) +
cor_gradient +
theme(plot.margin=unit(c(1,1,1,1),"cm"))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1) +
cor_gradient +
theme(plot.margin=unit(c(10,10,10,10),"cm"))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1) +
cor_gradient +
theme(plot.margin=unit(c(2,2,2,2),"cm"))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=45) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45, size=2) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45, size=5) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45, size=3) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45, size=4) +
cor_gradient
blue_gradient <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
# palette with 200 steps over shades of red
red_gradient <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
# gradient to show corellation
cor_gradient <- scale_fill_gradientn(name="Corellation", colours=c(r,"lime","lime",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
blue_gradient <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
# palette with 200 steps over shades of red
red_gradient <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
# gradient to show corellation
cor_gradient <- scale_fill_gradientn(name="Corellation", colours=c(r,"lightyellow","lightyellow",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45, size=4) +
cor_gradient
# palette with 200 steps over shades of blue
blue_gradient <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
# palette with 200 steps over shades of red
red_gradient <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
# gradient to show corellation
cor_gradient <- scale_fill_gradientn(name="Corellation", colours=c(r,"lightgrey","lightgrey",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r", label=TRUE, hjust=1, angle=-45, size=4) +
cor_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_gradient
# Colors and gradients to visualize corellation:
# palette with 200 steps over shades of blue
blue_gradient <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
# palette with 200 steps over shades of red
red_gradient <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
# gradient to show corellation
cor_fill_gradient <- scale_fill_gradientn(name="Corellation",
colours=c(r,"lightyellow","lightyellow",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_fill_gradient
ggcorr(data=wine[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_fill_gradient +
ggtitle("Corellation table for any two variables")
ggcorr(data=winematrix[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_fill_gradient +
facet_wrap(~quality, ncol=3)
ggtitle("Corellation table for any two variables")
ggcorr(data=winematrix[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_fill_gradient +
facet_wrap(~quality, ncol=3) +
ggtitle("Corellation table for any two variables")
ggcorr(data=winematrix[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_fill_gradient +
facet_wrap(~flavor, ncol=3) +
ggtitle("Corellation table for any two variables")
ggcorr(data=winematrix[sample.int(nrow(wine), 1000), c(2:14)], name="r",
label=TRUE, hjust=1, angle=-45, size=4) +
cor_fill_gradient +
facet_wrap(~flavor, ncol=3) +
ggtitle("Corellation table for any two variables")
# Colors and gradients to visualize corellation:
# palette with 200 steps over shades of blue
blue_gradient <- colorRampPalette(c("lightskyblue","royalblue","navy"))(200)
# palette with 200 steps over shades of red
red_gradient <- colorRampPalette(c("darkred","red2","mistyrose"))(200)
# gradient to show corellation
cor_fill_gradient <- scale_fill_gradientn(name="Corellation",
colours=c(r,"lightyellow","lightyellow",b),
na.value="grey", limits=c(-1,1),
breaks=c(-1.0,-0.5,-0.1,0.1,0.5,1.0),
values=c(
rescale(1:201,to=c(0.0,0.45)),
rescale(1:201,to=c(0.55,1.0))
))
?ggcorr
wineflavor <- wine %>%
dplyr::group_by(flavor) %>%
dplyr::summarise(mean.residual.sugar=mean(residual.sugar),
mean.acidity=mean(acidity),
se.residual.sugar=sd(residual.sugar)/sqrt(length(residual.sugar)),
se.acidity=sd(acidity)/sqrt(length(acidity)))
View(wineflavor)
ggplot(data=wine, aes(x=residual.sugar, y=acidity, colour=flavor)) +
geom_jitter(alpha=0.5) +
labs(x="Residual sugar in g/l", y="'Total' acidity in g/l") +
ggtitle("Classification of wines according to EU law") +
scale_x_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) +
scale_y_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5)) +
scale_color_brewer(name="Flavor", type="qual", palette=6)
xmax=mean.residual.sugar+se.residual.sugar,
xmax=mean.residual.sugar+se.residual.sugar,
ggplot(data=wine, aes(x=residual.sugar, y=acidity, colour=flavor)) +
geom_jitter(alpha=0.5) +
labs(x="Residual sugar in g/l", y="'Total' acidity in g/l") +
ggtitle("Classification of wines according to EU law") +
scale_x_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) +
scale_y_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5)) +
scale_color_brewer(name="Flavor", type="qual", palette=6)
ggplot(data=wine, aes(x=residual.sugar, y=acidity, colour=flavor)) +
geom_jitter(alpha=0.5) +
geom_errorbar(data=wineflavor,
aes(x=mean.residual.sugar,
y=mean.acidity,
xmin=mean.residual.sugar-se.residual.sugar,
xmax=mean.residual.sugar+se.residual.sugar,
ymin=mean.acidity-se.acidity,
ymax=mean.acidity+se.acidity,
color=flavor)) +
geom_point(data=wineflavor,
aes(x=mean.residual.sugar,
y=mean.acidity,
color=flavor),
size=6) +
scale_color_brewer(name="Flavor", type="qual", palette=6) +
labs(x="Residual sugar in g/l", y="'Total' acidity in g/l") +
ggtitle("Classification of wines according to EU law") +
scale_x_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) +
scale_y_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5)) +
ggplot(data=wine, aes(x=residual.sugar, y=acidity, colour=flavor)) +
geom_jitter(alpha=0.5) +
geom_errorbar(data=wineflavor,
aes(x=mean.residual.sugar,
y=mean.acidity,
xmin=mean.residual.sugar-se.residual.sugar,
xmax=mean.residual.sugar+se.residual.sugar,
ymin=mean.acidity-se.acidity,
ymax=mean.acidity+se.acidity,
color=flavor)) +
geom_point(data=wineflavor,
aes(x=mean.residual.sugar,
y=mean.acidity,
color=flavor),
size=6) +
scale_color_brewer(name="Flavor", type="qual", palette=6) +
labs(x="Residual sugar in g/l", y="'Total' acidity in g/l") +
ggtitle("Classification of wines according to EU law") +
scale_x_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) +
scale_y_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5))
ggplot(data=wine, aes(x=residual.sugar, y=acidity, colour=flavor)) +
geom_jitter(alpha=0.5) +
geom_errorbar(data=wineflavor,
aes(x=mean.residual.sugar,
y=mean.acidity,
xmin=mean.residual.sugar-se.residual.sugar,
xmax=mean.residual.sugar+se.residual.sugar,
ymin=mean.acidity-se.acidity,
ymax=mean.acidity+se.acidity,
color=flavor)) +
#geom_point(data=wineflavor,
#           aes(x=mean.residual.sugar,
#               y=mean.acidity,
#               color=flavor),
#           size=6) +
scale_color_brewer(name="Flavor", type="qual", palette=6) +
labs(x="Residual sugar in g/l", y="'Total' acidity in g/l") +
ggtitle("Classification of wines according to EU law") +
scale_x_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) +
scale_y_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5))
ggplot(data=wine, aes(x=residual.sugar, y=acidity, colour=flavor)) +
geom_jitter(alpha=0.1) +
geom_errorbar(data=wineflavor,
aes(x=mean.residual.sugar,
y=mean.acidity,
xmin=mean.residual.sugar-se.residual.sugar,
xmax=mean.residual.sugar+se.residual.sugar,
ymin=mean.acidity-se.acidity,
ymax=mean.acidity+se.acidity,
color=flavor)) +
#geom_point(data=wineflavor,
#           aes(x=mean.residual.sugar,
#               y=mean.acidity,
#               color=flavor),
#           size=6) +
scale_color_brewer(name="Flavor", type="qual", palette=6) +
labs(x="Residual sugar in g/l", y="'Total' acidity in g/l") +
ggtitle("Classification of wines according to EU law") +
scale_x_continuous(limits=c(0, 66), breaks = seq(0, 66, 5)) +
scale_y_continuous(limits=c(3.5, 15), breaks=seq(3.5, 15, 0.5))
