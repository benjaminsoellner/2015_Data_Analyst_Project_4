aes(x=age, y=friendships_initiated/tenure)) +
geom_line(aes(color=year_joined.bucket),
stat="summary", fun.y=median)
ggplot(data=subset(pf, !is.na(year_joined.bucket) & tenure >= 1),
aes(x=age, y=friendships_initiated/tenure)) +
geom_line(aes(color=year_joined.bucket),
stat="summary", fun.y=median)
ggplot(data=subset(pf, !is.na(year_joined.bucket) & tenure >= 1),
aes(x=tenure, y=friendships_initiated/tenure)) +
geom_line(aes(color=year_joined.bucket),
stat="summary", fun.y=median)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket))
yo <- read.csv('yogurt.csv')
str(yo)
yo <- read.csv('yogurt.csv')
setwd('h:/Dokumente/GitHub/2015_Data_Analyst_Project_4/lesson5/')
yo <- read.csv('yogurt.csv')
str(yo)
View(yo)
yo$id <- factor(yo$id)
ggplot(data=yo, aes(x=price)) +
geom_histogram()
qplot(data=yo, x=price)
summary(yo)
length(unique(yo$price))
summary(yo$price)
summary(yo$price)
length(unique(yo$price))
table(yo$price)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
summary(yo$all.purchases)
qplot(yo$all.purchases)
ggplot(data=yo, aes(x=time, y=price)) +
geom_line(alpha=0.2)
ggplot(data=yo, aes(x=time, y=price)) +
geom_point(alpha=0.2)
sample.ids <- sample(levels(yo$id), 16)
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x=time, y=price),
data=subset(yo, id %in% sample.ids)) +
facet_wrap(~id) +
geom_line() +
geom_point(aes(size=all.purchases), pch=1)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
pf$year_joined =  floor(2014 - pf$tenure/365)
pf.fc_by_age_year_joined.bucket <- pf %>%
filter(!is.na(year_joined.bucket)) %>%
group_by(age, year_joined.bucket) %>%
summarise(median_friend_count = median(friend_count),
mean_friend_count = mean(friend_count),
n=n()) %>%
ungroup() %>%
arrange(age)
install.packages(GGally)
install.packages("GGally")
library(GGally)
set.seed(1836)
pf_subset <- pf[, c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000), ])
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
View(nci)
View(nci.long.samp)
View(nci.long.samp)
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
qplot(diamonds$price) + facet_wrap(~color)
ggplot(data=diamonds, aes(x=diamonds)) +
geom_histogram()
ggplot(data=diamonds, aes(x=diamonds)) +
geom_histogram()
ggplot(data=diamonds, aes(x=diamonds)) +
geom_histogram(stat="identity")
ggplot(data=diamonds, aes(x=price)) +
geom_histogram()
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(color=cut)
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(color=cut)
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(aes(color=cut))
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(aes(fill
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(aes(fill=cut))
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(aes(fill=cut))
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(aes(fill=cut)) +
scale_fill_brewer(type='qual')
ggplot(data=diamonds, aes(x=price)) +
geom_histogram(aes(fill=cut)) +
scale_fill_brewer(type='qual') +
facet_wrap(~color)
ggplot(data=diamonds, aes(x=price, y=table)) +
geom_point(aes(color=cut)) +
scale_fill_brewer(type='qual')
ggplot(data=diamonds, aes(x=price, y=table)) +
geom_point(aes(fill=cut)) +
scale_fill_brewer(type='qual')
ggplot(data=diamonds, aes(x=price, y=table)) +
geom_point(aes(color=cut)) +
scale_color_brewer(type='qual')
?ylim
?quantile
ggplot(data=diamonds, aes(x=volume, y=table)) +
geom_point(aes(color=clarity)) +
scale_color_brewer(type='qual') +
scale_y_log10() +
ylim(0, quantile(diamonds$volume, 0.99))
diamonds$volume = diamonds$x * diamonds$y * diamonds$z
ggplot(data=diamonds, aes(x=volume, y=table)) +
geom_point(aes(color=clarity)) +
scale_color_brewer(type='qual') +
scale_y_log10() +
ylim(0, quantile(diamonds$volume, 0.99))
ggplot(data=diamonds, aes(x=volume, y=table)) +
geom_point(aes(color=clarity)) +
scale_color_brewer(type='qual') +
scale_y_log10() +
xlim(0, quantile(diamonds$volume, 0.99))
ggplot(data=diamonds, aes(x=volume, y=pice)) +
geom_point(aes(color=clarity)) +
scale_color_brewer(type='qual') +
scale_y_log10() +
xlim(0, quantile(diamonds$volume, 0.99))
ggplot(data=diamonds, aes(x=volume, y=pice)) +
geom_point(aes(color=clarity)) +
scale_color_brewer(type='div') +
scale_y_log10() +
xlim(0, quantile(diamonds$volume, 0.99))
ggplot(data=diamonds, aes(x=volume, y=price)) +
geom_point(aes(color=clarity)) +
scale_color_brewer(type='div') +
scale_y_log10() +
xlim(0, quantile(diamonds$volume, 0.99))
ggplot(data=pf, aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=pf, aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
setwd('h:/Dokumente/GitHub/2015_Data_Analyst_Project_4/lesson4/')
pf$prop_initiated = pf$friendships_initiated/pf$friend_count
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
pf$prop_initiated = pf$friendships_initiated/pf$friend_count
ggplot(data=pf, aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=pf, aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=subset(pf, !is.na(tenure)), aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=subset(pf, !is.na(prop_initiated)), aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
View(pf)
ggplot(data=subset(pf, !is.na(prop_initiated) & !is.na(tenure)), aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=subset(pf, !is.na(prop_initiated) & !is.na(tenure)), aes(x=tenure, y=prop_initiated)) +
geom_path(aes(color=year_joined.bucket))
ggplot(data=subset(pf, !is.na(prop_initiated) & !is.na(tenure)), aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=subset(pf, !is.na(prop_initiated) & !is.na(tenure) & !is.na(year_joined.bucket)), aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
pf.subset = subset(pf, !is.na(prop_initiated)
View(pf)
pf.subset = subset(pf, !is.na(prop_initiated))
ggplot(data=subset(pf, !is.na(prop_initiated)), aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
pf.subset = subset(pf, !is.na(prop_initiated))
View(pf.subset)
pf.subset = subset(pf, !is.na(prop_initiated) & prop_initiated != 0 & prop_initiated != 1)
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
View(pf.subset)
pf.subset = subset(pf, !is.na(prop_initiated))
ggplot(data=pf.subset, aes(x=7*round(tenure/7), y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
pf.subset = subset(pf, !is.na(prop_initiated))
ggplot(data=pf.subset, aes(x=30*round(tenure/30), y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=pf.subset, aes(x=14*round(tenure/14), y=prop_initiated)) +
geom_line(aes(color=year_joined.bucket))
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="point", shape=4)
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", color=year_joined.bucket)
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", color=year_joined.bucket)
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", color=pf$year_joined.bucket)
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line")
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", aes(color=year_joined.bucket))
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", aes(color=year_joined.bucket)) +
geom_smooth()
library(ggplot2)
pf <- read.delim('pseudo_facebook.tsv')
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
pf$prop_initiated = pf$friendships_initiated/pf$friend_count
pf.subset <- subset(pf, !is.na(prop_initiated))
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", aes(color=year_joined.bucket)) +
geom_smooth()
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
pf <- read.delim('pseudo_facebook.tsv')
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
library(ggplot2)
pf <- read.delim('pseudo_facebook.tsv')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
pf$year_joined =  floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, c(2004, 2009, 2011, 2012, 2014))
pf$prop_initiated = pf$friendships_initiated/pf$friend_count
pf.subset <- subset(pf, !is.na(prop_initiated))
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", aes(color=year_joined.bucket))
ggplot(data=pf.subset, aes(x=tenure, y=prop_initiated)) +
stat_summary(fun.y=mean, geom="line", aes(color=year_joined.bucket)) +
geom_smooth()
pf.subset %>% group_by(year_joined.bucket) %>% summarize(mean_prop_initiated=mean(prop_initiated))
ggplot(data=diamonds, aes(x=cut, y=price/carat)) +
geom_jitter(color=color) +
scale_color_brewer(type = 'div') +
facet_wrap(~clarity)
ggplot(data=diamonds, aes(x=cut, y=price/carat)) +
geom_jitter(color=color) +
scale_color_brewer(type = 'div') +
facet_wrap(~clarity)
ggplot(data=diamonds, aes(x=cut, y=price/carat)) +
geom_jitter(color=color) +
scale_color_brewer(type = 'div') +
facet_wrap(~clarity)
}r
ggplot(data=diamonds, aes(x=cut, y=price/carat)) +
geom_jitter(aes(color=color)) +
scale_color_brewer(type = 'div') +
facet_wrap(~clarity)
read.gapminder.data <- function(filename, v) {
filedata <- read.csv(filename, header=T, check.names=F)
filedata <- filedata %>%
tidyr::gather("Year", "Value", 2:length(filedata)) %>%
dplyr::filter(!is.na(Value))
filedata$Year <- as.numeric(levels(filedata$Year))[filedata$Year]
colnames(filedata)[1] <- "Country"
tidydata <- filedata %>%
dplyr::group_by(Country) %>%
dplyr::summarise(Year=max(Year)) %>%
dplyr::left_join(filedata, c("Year" = "Year", "Country" = "Country"))
colnames(tidydata)[2] <- paste(c("Year.", v), collapse="")
colnames(tidydata)[3] <- v
return(tidydata)
}
cc <- c("Country" = "Country")
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc) %>%
)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
)
setwd('h:/Dokumente/GitHub/2015_Data_Analyst_Project_4/lesson4/')
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP")
)
gapminder.data <-
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
setwd('h:/Dokumente/GitHub/2015_Data_Analyst_Project_4/lesson5/')
gapminder.data <-
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc)
)
View(gapminder.data)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDP") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "ChildMortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthRate"), cc) %>%
dplyr::filter(!is.na(GDP) & !is.na(ChildMortality) & !is.na(BirthRate))
)
View(gapminder.data)
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDPPerCapita") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "Under5Mortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthPer1000"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_one-year-olds immunized with three doses of hepatitis b (hepb3) (%).csv", "VaccinatedP"), cc) %>%
dplyr::left_join(read.gapminder.data("Child out of school primary.csv", "ChildrenPrimEdu"), cc) %>%
dplyr::filter(!is.na(GDPPerCapita) & !is.na(Under5Mortality) & !is.na(BirthPer1000) & !is.na(VaccinatedP) & !is.na(ChildrenPrimEdu))
)
View(gapminder.data)
pf_subset <- pf[, c(1,5,7,9,11)]
gapminder.data.subset <- pf[, c(1,5,7,9,11)]
View(gapminder.data.subset)
gapminder.data.subset <- gapminder.data[, c(1,5,7,9,11)]
View(gapminder.data.subset)
gapminder.data.subset <- gapminder.data[, c(1,5,7,9,11,13)]
View(gapminder.data.subset)
View(gapminder.data)
gapminder.data.subset <- gapminder.data[, c(1,3,5,7,9,11)]
View(gapminder.data.subset)
names(pf_subset)
names(gapminder.data.subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000), ])
ggpairs(gapminder.data.subset)
gapminder.data.subset <- gapminder.data[, c(3,5,7,9,11)]
names(gapminder.data.subset)
names(gapminder.data.subset)
ggpairs(gapminder.data.subset)
ggpairs(gapminder.data.subset)
names(gapminder.data.subset)
View(gapminder.data)
max(gapminder.data.subset$Under5Mortality)-min(gapminder.data.subset$Under5Mortality)
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000, fill = value)),
geom_tile() +
scale_fill_gradientn(colours=rev(heat.colors(color.spread), name="Under 5 y. Mortality per 1000"))
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000, fill = value)) +
geom_tile() +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000")
color.spread = floor(max(gapminder.data.subset$Under5Mortality)-min(gapminder.data.subset$Under5Mortality))
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000, fill = value)) +
geom_tile() +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000, fill = value)) +
geom_tile() +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000, fill = Under5Mortality)) +
geom_tile() +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000")
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(fill = Under5Mortality)) +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
geom_point(aes(fill = Under5Mortality)) +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
geom_point(aes(fill = Under5Mortality)) +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000") +
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
geom_point(aes(fill = Under5Mortality)) +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(fill = Under5Mortality)) +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_fill_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=heat.colors(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
xlab("GDP per Capita") +
ylab("Birth Rate per 1000")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=rev(heat.colors(color.spread)), name="Under 5 y. Mortality per 1000") +
xlab("Birth Rate per 1000") +
ylab("GDP per Capita")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "yellow", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("Birth Rate per 1000") +
ylab("GDP per Capita")
ggplot(data=gapminder.data.subset, aes(y = ChildrenPrimEdu, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "yellow", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("Children out of school. primary") +
ylab("One-year-olds immunized with three doses of Hepatitis B (%)")
ggplot(data=gapminder.data.subset, aes(y = ChildrenPrimEdu, x = VaccinatedP)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "yellow", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("One-year-olds immunized with three doses of Hepatitis B (%)") +
ylab("Children out of school. primary")
gapminder.data <- suppressWarnings(
read.gapminder.data("indicator gapminder gdp_per_capita_ppp.csv", "GDPPerCapita") %>%
dplyr::left_join(read.gapminder.data("indicator gapminder under5mortality.csv", "Under5Mortality"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_crude birth rate (births per 1000 population).csv", "BirthPer1000"), cc) %>%
dplyr::left_join(read.gapminder.data("indicator_one-year-olds immunized with three doses of hepatitis b (hepb3) (%).csv", "VaccinatedP"), cc) %>%
dplyr::left_join(read.gapminder.data("Years in school women 15 to 44.csv", "WomenAvgYearsInSchool"), cc) %>%
dplyr::filter(!is.na(GDPPerCapita) & !is.na(Under5Mortality) & !is.na(BirthPer1000) & !is.na(VaccinatedP) & !is.na(WomenAvgYearsInSchool))
)
gapminder.data.subset <- gapminder.data[, c(3,5,7,9,11)]
ggplot(data=gapminder.data.subset, aes(y = WomenAvgYearsInSchool, x = VaccinatedP)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "yellow", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("One-year-olds immunized with three doses of Hepatitis B (%)") +
ylab("Average years of Women in School")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "orange", "yellow", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("Birth Rate per 1000") +
ylab("GDP per Capita")
ggplot(data=gapminder.data.subset, aes(y = GDPPerCapita, x = BirthPer1000)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "yellow", "orange", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("Birth Rate per 1000") +
ylab("GDP per Capita")
ggplot(data=gapminder.data.subset, aes(y = WomenAvgYearsInSchool, x = VaccinatedP)) +
geom_point(aes(color = Under5Mortality)) +
scale_color_gradientn(colours=colorRampPalette(c("green", "yellow", "orange", "red"))(color.spread), name="Under 5 y. Mortality per 1000") +
xlab("One-year-olds immunized with three doses of Hepatitis B (%)") +
ylab("Average years of Women in School")
library(ggplot2)
pf <- read.delim('pseudo_facebook.tsv')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
install.packages("MASS")
data(diamonds)
data(diamond)
data(diamonds)
data(diamonds)
data(diamonds)
data(diamonds)
ggplot(data=diamonds, aes(x=weight, y=price)) +
xlim(0,quantile(diamonds$weight, 0.99)) +
ylim(0,quantile(diamonds$price, 0.99))
library(ggplot2)
library(ggplot2)
